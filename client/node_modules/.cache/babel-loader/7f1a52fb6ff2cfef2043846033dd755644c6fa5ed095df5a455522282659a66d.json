{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\WhiteBoard\\\\client\\\\src\\\\components\\\\Whiteboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport DrawingCanvas from './DrawingCanvas';\nimport Toolbar from './Toolbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Whiteboard({\n  roomId,\n  onLeave\n}) {\n  _s();\n  const [color, setColor] = useState('black');\n  const [width, setWidth] = useState(4);\n  const [userCount, setUserCount] = useState(1);\n  const drawingCanvasRef = useRef();\n\n  // Listen for user-count events from DrawingCanvas\n  const handleUserCount = count => setUserCount(count);\n\n  // Leave room handler\n  const handleLeaveRoom = () => {\n    if (drawingCanvasRef.current && drawingCanvasRef.current.leaveRoom) {\n      drawingCanvasRef.current.leaveRoom();\n    }\n    if (onLeave) onLeave();\n  };\n\n  // Clear handler\n  const handleClear = () => {\n    if (drawingCanvasRef.current && drawingCanvasRef.current.clearCanvas) {\n      drawingCanvasRef.current.clearCanvas();\n    }\n  };\n\n  // Responsive styles\n  const containerStyle = {\n    minHeight: '100vh',\n    background: 'linear-gradient(135deg, #f8fafc 0%, #e0e7ef 100%)',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 0,\n    margin: 0,\n    overflow: 'hidden'\n  };\n  const cardStyle = {\n    background: '#fff',\n    borderRadius: 16,\n    boxShadow: '0 4px 24px rgba(0,0,0,0.08)',\n    padding: 24,\n    maxWidth: 1000,\n    width: '98vw',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    boxSizing: 'border-box'\n  };\n  const canvasWrapperStyle = {\n    margin: '16px 0',\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    overflow: 'hidden'\n  };\n  // Responsive canvas size\n  const getCanvasSize = () => {\n    if (window.innerWidth < 700) return {\n      width: 340,\n      height: 320\n    };\n    if (window.innerWidth < 1000) return {\n      width: 600,\n      height: 400\n    };\n    return {\n      width: 800,\n      height: 600\n    };\n  };\n  const [canvasSize, setCanvasSize] = useState(getCanvasSize());\n  React.useEffect(() => {\n    const handleResize = () => setCanvasSize(getCanvasSize());\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyle,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: cardStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          margin: 0,\n          marginBottom: 8,\n          fontWeight: 700,\n          fontSize: 32,\n          letterSpacing: 1,\n          color: '#2d3748'\n        },\n        children: [\"Room: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: '#3182ce'\n          },\n          children: roomId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 125\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: 16,\n          fontWeight: 'bold',\n          color: '#4a5568',\n          fontSize: 18\n        },\n        children: [\"Active users: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: '#3182ce'\n          },\n          children: userCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 109\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n        color: color,\n        width: width,\n        onColorChange: setColor,\n        onWidthChange: setWidth,\n        onClear: handleClear\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: canvasWrapperStyle,\n        children: /*#__PURE__*/_jsxDEV(DrawingCanvas, {\n          ref: drawingCanvasRef,\n          roomId: roomId,\n          color: color,\n          width: width,\n          onUserCount: handleUserCount,\n          canvasWidth: canvasSize.width,\n          canvasHeight: canvasSize.height\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLeaveRoom,\n        style: {\n          marginTop: 16,\n          background: '#edf2f7',\n          border: 'none',\n          color: '#2d3748',\n          fontWeight: 600,\n          padding: '10px 32px',\n          borderRadius: 8,\n          fontSize: 16,\n          cursor: 'pointer',\n          boxShadow: '0 2px 8px rgba(49,130,206,0.08)',\n          transition: 'background 0.2s'\n        },\n        children: \"Leave Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(Whiteboard, \"tcMmSsfxahpjgNvRJ27KvxvwUYo=\");\n_c = Whiteboard;\nexport default Whiteboard;\nvar _c;\n$RefreshReg$(_c, \"Whiteboard\");","map":{"version":3,"names":["React","useState","useRef","DrawingCanvas","Toolbar","jsxDEV","_jsxDEV","Whiteboard","roomId","onLeave","_s","color","setColor","width","setWidth","userCount","setUserCount","drawingCanvasRef","handleUserCount","count","handleLeaveRoom","current","leaveRoom","handleClear","clearCanvas","containerStyle","minHeight","background","display","alignItems","justifyContent","padding","margin","overflow","cardStyle","borderRadius","boxShadow","maxWidth","flexDirection","boxSizing","canvasWrapperStyle","getCanvasSize","window","innerWidth","height","canvasSize","setCanvasSize","useEffect","handleResize","addEventListener","removeEventListener","style","children","marginBottom","fontWeight","fontSize","letterSpacing","fileName","_jsxFileName","lineNumber","columnNumber","onColorChange","onWidthChange","onClear","ref","onUserCount","canvasWidth","canvasHeight","onClick","marginTop","border","cursor","transition","_c","$RefreshReg$"],"sources":["D:/Coding/WhiteBoard/client/src/components/Whiteboard.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport DrawingCanvas from './DrawingCanvas';\nimport Toolbar from './Toolbar';\n\nfunction Whiteboard({ roomId, onLeave }) {\n  const [color, setColor] = useState('black');\n  const [width, setWidth] = useState(4);\n  const [userCount, setUserCount] = useState(1);\n  const drawingCanvasRef = useRef();\n\n  // Listen for user-count events from DrawingCanvas\n  const handleUserCount = (count) => setUserCount(count);\n\n  // Leave room handler\n  const handleLeaveRoom = () => {\n    if (drawingCanvasRef.current && drawingCanvasRef.current.leaveRoom) {\n      drawingCanvasRef.current.leaveRoom();\n    }\n    if (onLeave) onLeave();\n  };\n\n  // Clear handler\n  const handleClear = () => {\n    if (drawingCanvasRef.current && drawingCanvasRef.current.clearCanvas) {\n      drawingCanvasRef.current.clearCanvas();\n    }\n  };\n\n  // Responsive styles\n  const containerStyle = {\n    minHeight: '100vh',\n    background: 'linear-gradient(135deg, #f8fafc 0%, #e0e7ef 100%)',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 0,\n    margin: 0,\n    overflow: 'hidden',\n  };\n  const cardStyle = {\n    background: '#fff',\n    borderRadius: 16,\n    boxShadow: '0 4px 24px rgba(0,0,0,0.08)',\n    padding: 24,\n    maxWidth: 1000,\n    width: '98vw',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    boxSizing: 'border-box',\n  };\n  const canvasWrapperStyle = {\n    margin: '16px 0',\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    overflow: 'hidden',\n  };\n  // Responsive canvas size\n  const getCanvasSize = () => {\n    if (window.innerWidth < 700) return { width: 340, height: 320 };\n    if (window.innerWidth < 1000) return { width: 600, height: 400 };\n    return { width: 800, height: 600 };\n  };\n  const [canvasSize, setCanvasSize] = useState(getCanvasSize());\n  React.useEffect(() => {\n    const handleResize = () => setCanvasSize(getCanvasSize());\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return (\n    <div style={containerStyle}>\n      <div style={cardStyle}>\n        <h2 style={{ margin: 0, marginBottom: 8, fontWeight: 700, fontSize: 32, letterSpacing: 1, color: '#2d3748' }}>Room: <span style={{ color: '#3182ce' }}>{roomId}</span></h2>\n        <div style={{ marginBottom: 16, fontWeight: 'bold', color: '#4a5568', fontSize: 18 }}>Active users: <span style={{ color: '#3182ce' }}>{userCount}</span></div>\n        <Toolbar color={color} width={width} onColorChange={setColor} onWidthChange={setWidth} onClear={handleClear} />\n        <div style={canvasWrapperStyle}>\n          <DrawingCanvas ref={drawingCanvasRef} roomId={roomId} color={color} width={width} onUserCount={handleUserCount} canvasWidth={canvasSize.width} canvasHeight={canvasSize.height} />\n        </div>\n        <button onClick={handleLeaveRoom} style={{ marginTop: 16, background: '#edf2f7', border: 'none', color: '#2d3748', fontWeight: 600, padding: '10px 32px', borderRadius: 8, fontSize: 16, cursor: 'pointer', boxShadow: '0 2px 8px rgba(49,130,206,0.08)', transition: 'background 0.2s' }}>Leave Room</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Whiteboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}