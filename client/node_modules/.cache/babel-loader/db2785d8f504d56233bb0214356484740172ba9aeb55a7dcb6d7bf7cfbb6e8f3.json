{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\WhiteBoard\\\\client\\\\src\\\\components\\\\RoomJoin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RoomJoin({\n  onJoin\n}) {\n  _s();\n  const [roomCode, setRoomCode] = useState('');\n  const [error, setError] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!roomCode.match(/^[a-zA-Z0-9]{6,8}$/)) {\n      setError('Room code must be 6-8 alphanumeric characters.');\n      return;\n    }\n    // Call backend to join/create room\n    try {\n      const res = await fetch('/api/rooms/join', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          roomId: roomCode\n        })\n      });\n      if (res.ok) {\n        onJoin(roomCode);\n      } else {\n        setError('Failed to join room.');\n      }\n    } catch (err) {\n      setError('Server error.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room-join\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Join a Whiteboard Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: roomCode,\n        onChange: e => setRoomCode(e.target.value),\n        placeholder: \"Enter room code\",\n        maxLength: 8\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Join\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(RoomJoin, \"RTKZRATN+TSZ33aRBY7lCwmXsVw=\");\n_c = RoomJoin;\nexport default RoomJoin;\nvar _c;\n$RefreshReg$(_c, \"RoomJoin\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","RoomJoin","onJoin","_s","roomCode","setRoomCode","error","setError","handleSubmit","e","preventDefault","match","res","fetch","method","headers","body","JSON","stringify","roomId","ok","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","maxLength","_c","$RefreshReg$"],"sources":["D:/Coding/WhiteBoard/client/src/components/RoomJoin.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction RoomJoin({ onJoin }) {\r\n  const [roomCode, setRoomCode] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!roomCode.match(/^[a-zA-Z0-9]{6,8}$/)) {\r\n      setError('Room code must be 6-8 alphanumeric characters.');\r\n      return;\r\n    }\r\n    // Call backend to join/create room\r\n    try {\r\n      const res = await fetch('/api/rooms/join', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ roomId: roomCode })\r\n      });\r\n      if (res.ok) {\r\n        onJoin(roomCode);\r\n      } else {\r\n        setError('Failed to join room.');\r\n      }\r\n    } catch (err) {\r\n      setError('Server error.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"room-join\">\r\n      <h2>Join a Whiteboard Room</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          value={roomCode}\r\n          onChange={e => setRoomCode(e.target.value)}\r\n          placeholder=\"Enter room code\"\r\n          maxLength={8}\r\n        />\r\n        <button type=\"submit\">Join</button>\r\n      </form>\r\n      {error && <div className=\"error\">{error}</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RoomJoin; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,QAAQA,CAAC;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EAC5B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMU,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACN,QAAQ,CAACO,KAAK,CAAC,oBAAoB,CAAC,EAAE;MACzCJ,QAAQ,CAAC,gDAAgD,CAAC;MAC1D;IACF;IACA;IACA,IAAI;MACF,MAAMK,GAAG,GAAG,MAAMC,KAAK,CAAC,iBAAiB,EAAE;QACzCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,MAAM,EAAEf;QAAS,CAAC;MAC3C,CAAC,CAAC;MACF,IAAIQ,GAAG,CAACQ,EAAE,EAAE;QACVlB,MAAM,CAACE,QAAQ,CAAC;MAClB,CAAC,MAAM;QACLG,QAAQ,CAAC,sBAAsB,CAAC;MAClC;IACF,CAAC,CAAC,OAAOc,GAAG,EAAE;MACZd,QAAQ,CAAC,eAAe,CAAC;IAC3B;EACF,CAAC;EAED,oBACEP,OAAA;IAAKsB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBvB,OAAA;MAAAuB,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/B3B,OAAA;MAAM4B,QAAQ,EAAEpB,YAAa;MAAAe,QAAA,gBAC3BvB,OAAA;QACE6B,IAAI,EAAC,MAAM;QACXC,KAAK,EAAE1B,QAAS;QAChB2B,QAAQ,EAAEtB,CAAC,IAAIJ,WAAW,CAACI,CAAC,CAACuB,MAAM,CAACF,KAAK,CAAE;QAC3CG,WAAW,EAAC,iBAAiB;QAC7BC,SAAS,EAAE;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd,CAAC,eACF3B,OAAA;QAAQ6B,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,EACNrB,KAAK,iBAAIN,OAAA;MAAKsB,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAEjB;IAAK;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV;AAACxB,EAAA,CA3CQF,QAAQ;AAAAkC,EAAA,GAARlC,QAAQ;AA6CjB,eAAeA,QAAQ;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}